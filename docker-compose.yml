version: "3"

services:
  app:
    build: .
    image: app
    env_file: .env
    restart: always
    command:
      - python
      - app.py
      - "--debug"
    ports:
      - "8000:8000"
    volumes:
      - "./app:/app"
    depends_on:
      - worker

  worker:
    build: .
    image: app
    restart: always
    env_file: .env
    volumes:
      - "./app:/app"
    command:
      - celery
      - worker
      - "--app=worker.app"
      - "--concurrency=1"
      - "--loglevel=INFO"
    depends_on:
      - postgres
      - redis

  monitor:
    build: .
    image: app
    restart: always
    env_file: .env
    volumes:
      - "./app:/app"
    ports:
      - "5555:5555"
    command:
      - flower
      - "-A"
      - "worker.app"
      - "--logging=INFO"
    depends_on:
      - worker

  migrations:
    build: .
    image: app
    restart: "no"
    env_file: .env
    volumes:
      - "./app:/app"
    command:
      - alembic
      - upgrade
      - head
    depends_on:
      - postgres

  redis:
    image: "redis:5-alpine"
    env_file: .env
    ports:
      - "6379:6379"

  postgres:
    image: "postgres:11-alpine"
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - "./postgres-data:/var/lib/postgresql/data"
